// SPDX-License-Identifier: LGPL-3.0
pragma solidity 0.8.20;

/**
 * @title Errors library
 * @notice Defines the error messages emitted by the different contracts of the BinLayer protocol
 */
library Errors {
  string public constant NOT_PAUSER = '1'; // 'msg.sender is not permissioned as pauser'
  string public constant NOT_UNPAUSER = '2'; // 'msg.sender is not permissioned as unpauser'
  string public constant ZERO_ADDRESS_NOT_VALID = '3'; // 'zero address input'
  string public constant CONTRACT_PAUSED = '4'; // 'contract is paused'
  string public constant INDEX_PAUSED = '5'; // 'index is paused'
  string public constant INITIALIZE_ONCE = '6'; // '_initializePauser can only be called once'
  string public constant INVALID_UNPAUSE = '7'; // 'invalid attempt to unpause functionality'
  string public constant INVALID_PAUSE = '8'; // 'invalid attempt to pause functionality'
  string public constant NOT_POOL_WHITELISTER = '9'; // 'not the pool whitelister'
  string public constant POOL_NOT_WHITELISTED = '10'; // 'pool not whitelisted'
  string public constant NOT_DELEGATION_CONTROLLER = '11'; // 'not the DelegationController'
  string public constant THIRD_PARTY_TRANSFERS_DISABLED = '12'; // 'third transfers disabled'
  string public constant SIGNATURE_EXPIRED = '13'; // 'signature expired'
  string public constant ARRAY_LENGTH_MISMATCH = '14'; // 'array lengths do not match'
  string public constant ZERO_SHARES_NOT_VALID = '15'; // 'shares should not be zero!'
  string public constant DEPOSIT_EXCEEDS_MAX_LENGTH = '16'; // 'deposit would exceed MAX_STAKER_POOL_LIST_LENGTH'
  string public constant SHARE_AMOUNT_TOO_HIGH = '17'; // 'share amount too high'
  string public constant POOL_NOT_FOUND = '18'; // 'pool not found'
  string public constant ONLY_POOL_CONTROLLER = '19'; // 'caller must be PoolController'
  string public constant OPERATOR_ALREADY_REGISTERED = '20'; // 'operator has already registered'
  string public constant CALLER_NOT_OPERATOR = '21'; // 'caller must be an operator'
  string public constant STAKER_MUST_BE_DELEGATED = '22'; // 'staker must be delegated to undelegate'
  string public constant CANNOT_UNDELEGATE_OPERATOR = '23'; // 'operators cannot be undelegated'
  string public constant CALLER_CANNOT_UNDELEGATE = '24'; // 'caller cannot undelegate staker'
  string public constant INPUT_LENGTH_MISMATCH = '25'; // 'input length mismatch'
  string public constant WITHDRAWER_NOT_STAKER_OR_GATEWAY = '26'; // 'withdrawer must be staker or wrapped token gateway'
  string public constant OPT_OUT_WINDOW_EXCEEDS_MAX = '27'; // 'stakerOptOutWindow cannot be > MAX_STAKER_OPT_OUT_WINDOW'
  string public constant DECREASE_OPT_OUT_WINDOW = '28'; // 'stakerOptOutWindow cannot be decreased'
  string public constant ALREADY_DELEGATED = '29'; // 'staker is already actively delegated'
  string public constant NOT_REGISTERED_IN_BINLAYER = '30'; // 'operator is not registered in BinLayer'
  string public constant SALT_ALREADY_SPENT = '31'; // 'salt already spent'
  string public constant ACTION_NOT_IN_QUEUE = '32'; // 'action is not in queue'
  string public constant MIN_WITHDRAWAL_DELAY_NOT_PASSED = '33'; // 'minWithdrawalDelay period has not yet passed'
  string public constant ONLY_WITHDRAWER_CAN_COMPLETE = '34'; // 'only withdrawer can complete action'
  string public constant WITHDRAWAL_DELAY_NOT_PASSED = '35'; // 'withdrawalDelay period has not yet passed for this pool'
  string public constant POOLS_CANNOT_BE_EMPTY = '36'; // 'pools cannot be empty'
  string public constant THIRD_PARTY_TRANSFERS_FORBIDDEN = '37'; // 'withdrawer must be same address as staker if thirdPartyTransfersForbidden are set'
  string public constant MIN_WITHDRAWAL_DELAY_EXCEEDS_MAX = '38'; // '_minWithdrawalDelay cannot be > MAX_WITHDRAWAL_DELAY'
  string public constant POOL_WITHDRAWAL_DELAY_EXCEEDS_MAX = '39'; // '_withdrawalDelay cannot be > MAX_WITHDRAWAL_DELAY'
  string public constant WITHDRAWER_MUST_BE_STAKER = '40'; // 'withdrawer must be staker'
  string public constant ONLY_SUPPORT_WRAPPED_TOKEN_POOL = '41'; // 'only support wrapped token pool'
  string public constant WITHDRAW_AMOUNT_SHARES_TOO_HIGH = '42'; // 'amountShares must be less than or equal to totalShares'
  string public constant DEPOSIT_ONLY_UNDERLYING_TOKEN = '43'; // 'can only deposit underlying token'
  string public constant WITHDRAW_ONLY_UNDERLYING_TOKEN = '44'; // 'can only withdraw underlying token'
  string public constant MAX_DEPOSITS_EXCEEDED = '45'; // 'max deposits exceeded'
  string public constant MAX_PER_DEPOSIT_LIMIT_EXCEEDED = '46'; // 'max per deposit exceeded'
  string public constant MAX_PER_DEPOSIT_EXCEEDS_MAX_TOTAL = '47'; // 'maxPerDeposit exceeds maxTotalDeposits'
  string public constant CANNOT_CANCEL_SPENT_SALT = '48'; // 'cannot cancel spent salt'
  string public constant NOT_REWARDS_UPDATER = '49'; // 'caller is not the rewards updater'
  string public constant NOT_CREATE_REWARDS_FOR_ALL_SUBMITTER = '50'; // 'caller is not a valid create rewards for all submission submitter'
  string public constant NOT_CLAIMER = '51'; // 'caller is not valid claimer'
  string public constant CUMULATIVE_EARNINGS_MUST_BE_GREATER_THAN_CUMULATIVE_LAIMED = '52'; // 'cumulative earnings must be gt than cumulative claimed'
  string public constant NEW_ROOT_MUST_BE_NEWER_CALCULATED_PERIOD = '53'; // 'new root must be for newer calculated period'
  string public constant CANNOT_BE_IN_THE_FEATURE = '54'; // 'rewardsCalculationEndTimestamp cannot be in the future'
  string public constant INVALID_ROOT_INDEX = '55'; // 'invalid rootIndex'
  string public constant ROOT_ALREADY_DISABLED = '56'; // 'root already disabled'
  string public constant ROOT_ALREADY_ACTIVATED = '57'; // 'root already activated'
  string public constant NO_POOLS_SET = '58'; // 'no pools set'
  string public constant AMOUNT_CANNOT_BE_ZERO = '59'; // 'amount cannot be 0'
  string public constant AMOUNT_TOO_LARGE = '60'; // 'amount too large'
  string public constant DURATION_EXCEEDS_MAX_REWARDS_DURATION = '61'; // 'duration exceeds MAX_REWARDS_DURATION'
  string public constant DURATION_MUST_BE_MULTIPLE_OF_CALCULATION_INTERVAL_SECONDS = '62'; // 'duration must be a multiple of CALCULATION_INTERVAL_SECONDS'
  string public constant STARTTIMESTAMP_MUST_BE_MULTIPLE_OF_CALCULATION_INTERVAL_SECONDS = '63'; // 'startTimestamp must be a multiple of CALCULATION_INTERVAL_SECONDS'
  string public constant STARTTIMESTAMP_TOO_FAR_IN_THE_PAST = '64'; // 'startTimestamp too far in the past'
  string public constant STARTTIMESTAMP_TOO_FAR_IN_THE_FUTURE = '65'; // 'startTimestamp too far in the future'
  string public constant INVALID_POOL_CONSIDERED = '66'; // 'invalid pool considered'
  string public constant POOLS_MUST_BE_ASCENDING = '67'; // 'pools must be in ascending order to handle duplicates'
  string public constant ROOT_IS_DISABLED = '68'; // 'root is disabled'
  string public constant ROOT_NOT_ACTIVATED_YET = '69'; // 'root not activated yet'
  string public constant INVALID_TOKEN_LEAF_INDEX = '70'; // 'invalid token leaf index'
  string public constant INVALID_TOKEN_CLAIM_PROOF = '71'; // 'invalid token claim proof'
  string public constant INVALID_EARNER_LEAF_INDEX = '72'; // 'invalid earner leaf index'
  string public constant INVALID_EARNER_CLAIM_PROOF = '73'; // 'invalid earner claim proof'
  string public constant ROOT_NOT_FOUND = '74'; // 'root not found'
}
